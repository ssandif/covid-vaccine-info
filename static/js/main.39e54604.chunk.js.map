{"version":3,"sources":["logo.svg","components/SearchResults.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchResults","title","useState","results","setResults","search","a","fetch","fetchResults","ok","status","statusText","text","console","log","substring","parser","DOMParser","doc","parseFromString","headlines","querySelectorAll","acc","forEach","x","push","textContent","Typography","variant","Button","onClick","List","length","map","result","ListItem","ListItemText","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,G,MAAA,IAA0B,kC,wFCyC1BA,EAlC+B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC7C,EAA8BC,mBAAmB,IAAjD,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAM,uCAAG,sCAAAC,EAAA,sEACgBC,MAAM,sFADtB,WACLC,EADK,QAGOC,GAHP,uBAIPL,EAAW,CAAC,UAAD,OAAWI,EAAaE,OAAxB,YAAkCF,EAAaG,cAJnD,0CAQQH,EAAaI,OARrB,OAQLA,EARK,OASXC,QAAQC,IAAIF,EAAKG,UAAU,EAAG,KACxBC,EAAS,IAAIC,UACbC,EAAMF,EAAOG,gBAAgBP,EAAM,aACnCQ,EAAYF,EAAIG,iBAAiB,oBACjCC,EAAgB,GACtBF,EAAUG,SAAQ,SAAAC,GAAC,OAAIF,EAAIG,KAAKD,EAAEE,aAAe,OACjDtB,EAAWkB,GAfA,4CAAH,qDAkBZ,OACA,qCACI,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B3B,IAC1B,cAAC4B,EAAA,EAAD,CAAQC,QAASzB,EAAjB,oBACA,cAAC0B,EAAA,EAAD,UACK5B,EAAQ6B,OAAS,EACZ7B,EAAQ8B,KAAI,SAAAC,GAAM,OAAK,cAACC,EAAA,EAAD,UAAuB,cAACC,EAAA,EAAD,UAAeF,KAAvBA,MACrC,cAACC,EAAA,EAAD,UAAU,cAACC,EAAA,EAAD,wCCRdC,MAtBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,+CADP,0BAGA,cAAC,EAAD,CAAexC,MAAM,mBACrB,mBACEqC,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCAOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39e54604.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { FC, useState } from 'react';\r\nimport { Button, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\n\r\ninterface SearchResultsProps {\r\n    title: string;\r\n}\r\n\r\nconst SearchResults: FC<SearchResultsProps> = ({ title }) => {\r\n    const [results, setResults] = useState<string[]>([]);\r\n\r\n    const search = async () => {\r\n        const fetchResults = await fetch(\"https://cors-anywhere.herokuapp.com/https://www.google.com/search?q=pfizer+vaccine\");\r\n\r\n        if (!fetchResults.ok) {\r\n            setResults([`Error: ${fetchResults.status} ${fetchResults.statusText}`]);\r\n            return;\r\n        }\r\n\r\n        const text = await fetchResults.text();\r\n        console.log(text.substring(0, 10))\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(text, \"text/html\");\r\n        const headlines = doc.querySelectorAll(\"h3.LC20lb.DKV0Md\");\r\n        const acc: string[] = [];\r\n        headlines.forEach(x => acc.push(x.textContent || \"\"))\r\n        setResults(acc);\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Typography variant=\"h1\">{title}</Typography>\r\n        <Button onClick={search}>Search</Button>\r\n        <List>\r\n            {results.length > 0\r\n                ? results.map(result => (<ListItem key={result}><ListItemText>{result}</ListItemText></ListItem>)) \r\n                : (<ListItem><ListItemText>No results found.</ListItemText></ListItem>)}\r\n        </List>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default SearchResults;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport SearchResults from './components/SearchResults';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <SearchResults title=\"Search Results\" />\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}