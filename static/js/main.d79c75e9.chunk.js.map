{"version":3,"sources":["logo.svg","components/SearchResults.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchResults","title","searchUrl","useState","results","setResults","search","a","fetch","fetchResults","ok","error","text","status","statusText","parser","DOMParser","doc","parseFromString","headlines","querySelectorAll","acc","forEach","x","push","textContent","link","getAttribute","undefined","Typography","variant","Button","onClick","List","length","map","result","ListItem","ListItemText","Link","href","target","rel","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,G,MAAA,IAA0B,kC,gGCkD1BA,EApC+B,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACpD,EAA8BC,mBAAqB,IAAnD,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAM,uCAAG,wCAAAC,EAAA,sEACgBC,MAAMN,GADtB,WACLO,EADK,QAGOC,GAHP,uBAIDC,EAAQ,CAACC,KAAK,UAAD,OAAYH,EAAaI,OAAzB,YAAmCJ,EAAaK,aACnET,EAAW,CAACM,IALL,0CAUQF,EAAaG,OAVrB,OAULA,EAVK,OAWLG,EAAS,IAAIC,UACbC,EAAMF,EAAOG,gBAAgBN,EAAM,aACnCO,EAAYF,EAAIG,iBAAiB,kBAEjCC,EAAkB,GACxBF,EAAUG,SAAQ,SAAAC,GAAC,OAAIF,EAAIG,KAAK,CAACZ,KAAMW,EAAEE,aAAe,GAAKC,KAAMH,EAAEI,aAAa,cAAWC,OAC7FvB,EAAWgB,GAjBA,4CAAH,qDAoBZ,OACA,qCACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B7B,IAC1B,cAAC8B,EAAA,EAAD,CAAQC,QAAS1B,EAAjB,oBACA,cAAC2B,EAAA,EAAD,UACK7B,EAAQ8B,OAAS,EACZ9B,EAAQ+B,KAAI,SAAAC,GAAM,OAAK,cAACC,EAAA,EAAD,UAA4B,cAACC,EAAA,EAAD,UAAc,cAACC,EAAA,EAAD,CAAMC,KAAMJ,EAAOV,KAAMe,OAAO,SAASC,IAAI,WAA7C,SAA0DN,EAAOxB,UAA5FwB,EAAOxB,SAC5C,cAACyB,EAAA,EAAD,UAAU,cAACC,EAAA,EAAD,wCCfdK,MAxBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,+CADP,0BAGA,cAAC,EAAD,CAAe9C,MAAM,SAASC,UAAW,uFACzC,cAAC,EAAD,CAAeD,MAAM,UAAUC,UAAW,wFAC1C,cAAC,EAAD,CAAeD,MAAM,kBAAkBC,UAAW,oGAClD,mBACE0C,UAAU,WACVJ,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCFOM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d79c75e9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { FC, useState } from 'react';\r\nimport { Button, List, ListItem, ListItemText, Typography, Link} from '@material-ui/core';\r\n\r\ninterface SearchResultsProps {\r\n    title: string;\r\n    searchUrl: string;\r\n}\r\n\r\ninterface Headline {\r\n    text: string;\r\n    link?: string;\r\n}\r\n\r\n\r\nconst SearchResults: FC<SearchResultsProps> = ({ title, searchUrl }) => {\r\n    const [results, setResults] = useState<Headline[]>([]);\r\n\r\n    const search = async () => {\r\n        const fetchResults = await fetch(searchUrl);\r\n\r\n        if (!fetchResults.ok) {\r\n            const error = {text: `Error: ${fetchResults.status} ${fetchResults.statusText}` }; \r\n            setResults([error]);\r\n            \r\n            return;\r\n        }\r\n\r\n        const text = await fetchResults.text();\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(text, \"text/html\");\r\n        const headlines = doc.querySelectorAll(\"div.yuRUbf > a\");\r\n\r\n        const acc: Headline[] = [];\r\n        headlines.forEach(x => acc.push({text: x.textContent || \"\" , link: x.getAttribute(\"href\") || undefined }));\r\n        setResults(acc);\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Typography variant=\"h1\">{title}</Typography>\r\n        <Button onClick={search}>Search</Button>\r\n        <List>\r\n            {results.length > 0\r\n                ? results.map(result => (<ListItem key={result.text}><ListItemText><Link href={result.link} target=\"_blank\" rel=\"noopener\" >{result.text}</Link></ListItemText></ListItem>)) \r\n                : (<ListItem><ListItemText>No results found.</ListItemText></ListItem>)}\r\n        </List>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default SearchResults;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport SearchResults from './components/SearchResults';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <SearchResults title=\"Pfizer\" searchUrl= \"https://cors-anywhere.herokuapp.com/https://www.google.com/search?q=pfizer+vaccine\" />\r\n        <SearchResults title=\"Moderna\" searchUrl= \"https://cors-anywhere.herokuapp.com/https://www.google.com/search?q=moderna+vaccine\" />\r\n        <SearchResults title=\"Johnson&Johnson\" searchUrl= \"https://cors-anywhere.herokuapp.com/https://www.google.com/search?q=johnson+and+johnson+vaccine\" />\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}